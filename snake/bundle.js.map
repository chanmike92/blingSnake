{"version":3,"sources":["webpack/bootstrap 3854725f19604c687b01","./snake/coord.js","./snake/main.js","./snake/snake-view.js","./snake/board.js","./snake/snake.js","./snake/apple.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;ACLD;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;;AAEA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACnIA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACvDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC/GA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/snake/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3854725f19604c687b01","class Coord {\n  constructor(x, y) {\n    this.startX = x;\n    this.startY = y;\n    this.x = x;\n    this.y = y;\n  }\n\n  plus(coords) {\n    return new Coord(this.x + coords.x, this.y + coords.y);\n  }\n\n  equals(coords) {\n    return (this.x === coords.x && this.y === coords.y);\n  }\n\n  isOpposite(coords) {\n    return (this.x === (coords.x * -1)) && (this.y === (coords.y * -1));\n  }\n\n  reset() {\n    this.x = this.startX;\n    this.y = this.startY;\n  }\n}\n\nmodule.exports = Coord;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/coord.js\n// module id = 0\n// module chunks = 0","const SnakeView = require('./snake-view');\n\n$b(function () {\n  const rootEl = $b('.snake-game');\n  new SnakeView(rootEl);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/main.js\n// module id = 1\n// module chunks = 0","const Board = require('./board.js');\n\n\nclass View {\n  constructor(el) {\n    this.el = el;\n    this.time = 100;\n    this.board = new Board(20);\n    this.score = 0;\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleStart();\n  }\n\n  handleStart() {\n      const start = (e) => {\n        if (e.keyCode === 13) {\n          e.preventDefault();\n          this.setupGrid();\n          this.board.snake.reset();\n          this.intervalId = window.setInterval(\n            this.step.bind(this),\n            this.time\n          );\n          // window.removeEventListener('keypress', start);\n          window.removeEventListener('keypress', start);\n          window.addEventListener(\"keydown\", this.handleKeyEvent.bind(this));\n        }\n      };\n    window.addEventListener('keypress', start);\n    }\n\n  handleKeyEvent(event) {\n\n    if (View.KEYS[event.keyCode]) {\n      this.board.snake.turn(View.KEYS[event.keyCode]);\n    }\n  }\n\n\n\n  setupGrid() {\n    let html = \"\";\n\n    for (let i = 0; i < this.board.dimensions; i++) {\n      html += \"<ul>\";\n      for (let j = 0; j < this.board.dimensions; j++) {\n        html += \"<li></li>\";\n      }\n      html += \"</ul>\";\n    }\n\n    this.el.html(html);\n    this.li = this.el.find(\"li\");\n  }\n\n  step() {\n    if (this.board.snake.length() > 0) {\n      this.board.snake.move();\n      if (this.board.apples > (this.score / 50)) {\n        window.clearInterval(this.intervalId);\n        this.time = this.time * 0.95;\n        this.intervalId = window.setInterval(\n          this.step.bind(this),\n          this.time\n        );\n        this.score = this.board.apples * 50;\n\n      }\n      this.render();\n    } else {\n      this.endGame();\n      // alert(\"You lose!\");\n      // window.clearInterval(this.intervalId);\n    }\n  }\n\n  endGame() {\n    $b('figure').html('<div>You lose. Press Enter to play again</div>');\n    window.clearInterval(this.intervalId);\n    window.removeEventListener('keydown', this.handleKeyEvent.bind(this));\n    this.score = 0;\n    this.time = 100;\n    this.board.appleReset();\n    this.handleStart();\n  }\n\n  //\n  // render() {\n  //   this.updateClasses(this.board.snake.segments, \"snake\");\n  //   this.updateClasses([this.board.apple.position], \"apple\");\n  // }\n  //\n  // updateClasses(coords, className) {\n  //\n  //   $b('li').removeClass(className);\n  //\n  //   coords.forEach(coord => {\n  //     const flatCoord = (coord.i * this.board.dimensions) + coord.j;\n  //     $b('li').htmlElements[flatCoord].addClass(className);\n  //   });\n  // }\n\n\n  render() {\n    $b(\"li\").removeClass(\"snake\");\n    $b(\".score\").html(`Score: ${this.score}`)\n    this.board.snake.segments.forEach( segment => {\n      let idx = (segment.y * this.board.dimensions) + segment.x;\n\n      $b(this.li[idx]).addClass(\"snake\");\n\n    });\n    $b(\"li\").removeClass(\"apple\");\n    let app = this.board.apple.position;\n    let idx2 = (app.y * this.board.dimensions) + app.x;\n\n    $b(this.li[idx2]).addClass(\"apple\");\n  }\n\n}\n\nView.KEYS = {\n  38: \"N\",\n  39: \"E\",\n  40: \"S\",\n  37: \"W\"\n};\n\nView.STEP_MILLIS = 100;\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/snake-view.js\n// module id = 2\n// module chunks = 0","const Snake = require('./snake');\nconst Apple = require('./apple');\n\n\nclass Board {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.snake = new Snake(this);\n    this.apple = new Apple(this);\n    this.apples = 0;\n  }\n\n  static blankGrid(dimensions) {\n    const grid = [];\n\n    for (let i = 0; i < dimensions; i++) {\n      const row = [];\n      for (let j = 0; j < dimensions; j++) {\n        row.push(Board.BLANK_SYMBOL);\n      }\n      grid.push(row);\n    }\n\n    return grid;\n  }\n\n  render() {\n    const grid = Board.blankGrid(this.dimensions);\n\n    this.snake.segments.forEach( segment => {\n      grid[segment.x][segment.y] = Snake.SYMBOL;\n    });\n\n    grid[this.apple.position.x][this.apple.position.y] = Apple.SYMBOL;\n\n    const rowStrs = [];\n    grid.map( row => row.join(\"\") ).join(\"\\n\");\n  }\n\n  validPosition(coord) {\n    return (coord.x >= 0) && (coord.x < this.dimensions) &&\n      (coord.y >= 0) && (coord.y < this.dimensions);\n  }\n\n  appleReset() {\n    this.apples = 0;\n  }\n\n  ateApple() {\n    this.apples++;\n  }\n}\n\nBoard.BLANK_SYMBOL = \".\";\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/board.js\n// module id = 3\n// module chunks = 0","const Coord = require('./coord');\n\nclass Snake {\n  constructor(board) {\n    this.direction = 'N';\n    this.turning = false;\n    this.board = board;\n\n    this.center = new Coord(Math.floor(board.dimensions/2), Math.floor(board.dimensions/2));\n    this.segments = [this.center];\n\n    this.growTurns = 0;\n  }\n\n  eatApple() {\n      if (this.head().equals(this.board.apple.position)) {\n        this.growTurns += 2;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isOccupying(array) {\n      let result = false;\n      this.segments.forEach( segment => {\n        if (segment.i === array[0] && segment.j === array[1]) {\n          result = true;\n          return result;\n        }\n      });\n      return result;\n    }\n\n    head() {\n      return this.segments.slice(-1)[0];\n    }\n\n    isValid() {\n      const head = this.head();\n\n      if (!this.board.validPosition(this.head())) {\n\n        return false;\n      }\n\n      for (let i = 0; i < this.length() - 1; i++) {\n        if (this.segments[i].equals(head)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    move() {\n\n      this.segments.push(this.head().plus(Snake.DIRECTIONS[this.direction]));\n\n      this.turning = false;\n\n      if (this.eatApple()) {\n        this.board.ateApple();\n        this.board.apple.replace();\n      }\n\n      if (this.growTurns > 0) {\n\n        this.growTurns -= 1;\n      } else {\n        this.segments.shift();\n      }\n\n      if (!this.isValid()) {\n\n        this.segments = [];\n      }\n    }\n\n    turn(dir) {\n\n      if (Snake.DIRECTIONS[this.direction].isOpposite(Snake.DIRECTIONS[dir]) ||\n        this.turning) {\n\n        return;\n      } else {\n\n        this.turning = true;\n        this.direction = dir;\n      }\n    }\n\n    length() {\n      return this.segments.length;\n    }\n\n    reset() {\n      this.segments = [this.center];\n    }\n}\n\nSnake.DIRECTIONS = {\n  \"N\": new Coord(0, -1),\n  \"E\": new Coord(1, 0),\n  \"S\": new Coord(0, 1),\n  \"W\": new Coord(-1, 0)\n};\n\nSnake.SYMBOL = \"S\";\nSnake.GROW_TURNS = 2;\n\nmodule.exports = Snake;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/snake.js\n// module id = 4\n// module chunks = 0","const Coord = require(\"./coord\");\n\nclass Apple {\n  constructor(board) {\n    this.board = board;\n    this.replace();\n  }\n\n  replace() {\n    let x = Math.floor(Math.random() * this.board.dimensions);\n    let y = Math.floor(Math.random() * this.board.dimensions);\n\n    while (this.board.snake.isOccupying([x, y])) {\n      x = Math.floor(Math.random() * this.board.dimensions);\n      y = Math.floor(Math.random() * this.board.dimensions);\n    }\n\n    this.position = new Coord(x, y);\n  }\n\n}\n\nmodule.exports = Apple;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/apple.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}